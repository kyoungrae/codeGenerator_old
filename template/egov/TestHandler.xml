<?xml version="1.0" encoding="UTF-8"?>
<template>
	<reserved>
		<sourcetype>Handler</sourcetype>
		<conjunction>,</conjunction>
		<filename>#Service##Sourcetype#Test</filename>
		<ext>java</ext>
		<path>./work/genSrc/test/kr/co/dreamlabs/#namespace#/#scope#/handler/</path>
	</reserved>
	<definition>
		<version>1.0</version>
		<author>source generator (ilho.ko@gmail.com)</author>
		<cdate>2015.7.28</cdate>
		<pakage>test.kr.co.dreamlabs.#namespace#.#scope#.handler</pakage>
	</definition>
	<source>
	<![CDATA[
/**
 * + dreamlabs Web application Framework
 */
package #pakage#;

import java.util.List;

import javax.inject.Inject;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

import kr.co.dreamlabs.framework.common.database.util.DatabaseConstant;
import kr.co.dreamlabs.#namespace#.#scope#.bean.#Service#Bean;
import kr.co.dreamlabs.#namespace#.#scope#.handler.#Service#Handler;
import test.kr.co.dreamlabs.TestConfig;

@SuppressWarnings("unchecked")
@RunWith(SpringJUnit4ClassRunner.class)
@Transactional
public class #Service##Sourcetype#Test extends TestConfig {
	@Inject
	private #Service#Handler #service#Handler;
	
	private #Service#Bean #service#Bean;#begin#
	private Object #key_fields#;#end#
	
	@Before
	public void before() {#begin#
		#key_fields# = "#key_fields#";#end#
	}
	
	@Test
	public void testAll() throws Exception {
		testInsert();
		testUpdate();
		testSelect();
		testDelete();
	}
	
	public void testInsert() throws Exception {
		#service#Bean = new #Service#Bean();#begin#
		#service#Bean.set#Key_fields#("test");#end#
		
		int result = #service#Handler.insert(#service#Bean);
		Assert.assertEquals(result, DatabaseConstant.DB_SUCCESS);
	}	

	public void testUpdate() throws Exception {
		int result = #service#Handler.update(#service#Bean);
		Assert.assertEquals(result, DatabaseConstant.DB_SUCCESS);
	}	
	
	public void testSelect() throws Exception {
		List<#Service#Bean> list = #service#Handler.select(#service#Bean);
		Assert.assertEquals(list.size(), DatabaseConstant.DB_SUCCESS);
	}
	
	public void testDelete() throws Exception {
		int result = #service#Handler.delete(#service#Bean);
		Assert.assertEquals(result, DatabaseConstant.DB_SUCCESS);
	}
}
	]]>
	</source>
</template>
